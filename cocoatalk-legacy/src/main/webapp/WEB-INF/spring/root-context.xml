<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	스프링 전역 설정 파일
	- 모든 스프링 요소에서 알아야 하는 공용 도구들을 이곳에 등록
	- 모든 스프링 요소에서 알아야 하는 공용 설정들을 이곳에 작성
	- 필요로 하는 namespace가 있다면 하단의 namespace 탭에서 추가 가능
 -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 
		미리 만들어둔 properties 들을 등록하여 이 설정파일에서 사용할 수 있도록 구현
		= 경로와 관련된 모듈을 필요(spring-context)
		= 사용은 EL로 한다(SpringEL)
	 -->
	<context:property-placeholder location="classpath:/properties/**/*.properties"/>
	
	<!-- 
		필터는 전역설정파일에 등록되므로 필터에서 사용할 수 있는 도구들도 전역설정파일에 등록해야 한다
		- @Controller를 제거한 나머지 도구들을 모두 이곳에 등록
	 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<context:component-scan base-package="com.hacademy.cocoatalk" use-default-filters="true">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 
		데이터베이스 관련 도구 등록
		- DriverManagerDataSource : 일반 연결 생성 도구(매번 신규 생성)
		- BasicDataSource : DBCP 연결 생성 도구(연결 후 렌탈 방식)
		- JdbcTemplate : 명령 실행 도구
	 -->
	<!-- 암호화를 위한 Encoder 등록 -->
	<bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<!-- 
		사용할 필터를 bean으로 전체 설정에 등록
		= 반드시 이곳에 해야 한다(서블릿 설정파일에 하면 인식이 안됨) 
		
		1. 직접 이곳에 <bean>으로 등록해도 되고
		2. @Service 또는 @Component로 등록해도 된다(component-scan을 고쳤으니까)
		
		<bean id="springFilter" class="com.kh.spring15.filter.SpringFilter"></bean>	
	-->
	
	<!-- 
	이메일 전송 도구(필요할 경우 아래의 구문을 등록 해제하여 사용)
		
	<bean id="sender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}"></property>
		<property name="port" value="${email.port}"></property>
		<property name="username" value="${email.username}"></property>
		<property name="password" value="${email.password}"></property>
		
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.debug">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
			</props>
		</property>
	</bean> 
	-->
	
	
	<!-- 
		Task 관련 설정 
		- namespace에 task를 추가
		- annotation-driven 태그를 작성하여 관련 어노테이션을 활성화
	-->
	<task:annotation-driven/>	
		
</beans>
